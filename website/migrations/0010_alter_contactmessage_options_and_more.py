# Generated by Django 5.1 on 2025-09-23 05:09
from django.db import migrations, models

def dedupe_projectimage_order(apps, schema_editor):
    ProjectImage = apps.get_model('website', 'ProjectImage')
    qs = ProjectImage.objects.order_by('project_id', 'id')
    current_project = None
    idx = 0
    for img in qs.iterator():
        if img.project_id != current_project:
            current_project = img.project_id
            idx = 0
        idx += 1
        if img.order != idx:
            img.order = idx
            img.save(update_fields=['order'])

class Migration(migrations.Migration):

    dependencies = [
        ('website', '0009_swiperslide'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='contactmessage',
            options={'ordering': ['-submitted_at']},
        ),
        migrations.AlterModelOptions(
            name='documentsmanager',
            options={
                'ordering': ['order', '-created_at'],
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.AlterModelOptions(
            name='member',
            options={'ordering': ['order', 'name']},
        ),
        migrations.AlterModelOptions(
            name='post',
            options={'ordering': ['-is_pinned', 'order', '-created_at']},
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['order', 'name']},
        ),
        migrations.AlterModelOptions(
            name='projectimage',
            options={'ordering': ['order', 'id']},
        ),

        # --- AddField(y) ---
        migrations.AddField(
            model_name='documentsmanager',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Kolejność'),
        ),
        migrations.AddField(
            model_name='member',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Kolejność'),
        ),
        migrations.AddField(
            model_name='post',
            name='is_pinned',
            field=models.BooleanField(default=False, verbose_name='Przypięty'),
        ),
        migrations.AddField(
            model_name='post',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Kolejność (gdy przypięty)'),
        ),
        migrations.AddField(
            model_name='project',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Kolejność'),
        ),
        migrations.AddField(
            model_name='projectimage',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Kolejność w projekcie'),
        ),

        # --- Uporządkowanie istniejących danych przed nałożeniem unikalności ---
        migrations.RunPython(dedupe_projectimage_order, migrations.RunPython.noop),

        # --- Na końcu dopiero constraint unikalności (jeden wariant!) ---
        migrations.AlterUniqueTogether(
            name='projectimage',
            unique_together={('project', 'order')},
        ),
        # lub zamiast powyższego:
        # migrations.AddConstraint(
        #     model_name='projectimage',
        #     constraint=models.UniqueConstraint(
        #         fields=['project', 'order'],
        #         name='unique_projectimage_order_per_project',
        #     ),
        # ),
    ]
